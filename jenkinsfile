pipeline {
    agent any

    stages {
        stage('Clone') {
            steps {
                git credentialsId: '1cb', url: 'https://.git'
            }
        }
        
        stage('Build') {
            steps {
                withGradle {
                    sh 'gradlew.bat build --scan'
                }
            }
        }
        stage('Unit Tests') {
            steps {
                bat 'gradlew.bat test'
            }
            post {
                always {
                    //junit '**/build/test-results/test/TEST-*.xml'
                    //catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    echo "hello"
                    //sh "exit 1"
                    //}
                }
            }
        }
        
        stage('DockerBuild') {
            steps {
                bat  'docker build -t registry.gitlab.com/s/testmicroservice .'
            }
        }
        
        stage('Push To GitLab') {
            steps {
                withCredentials([string(credentialsId: 'patToken', variable: 'patForUse')]) {
                       bat "docker login -u tghdfds.com -p ${patForUse} registry.gitlab.com"
                }
                bat 'docker push registry.gitlab.com//testmicroservice'
            }
        }
        
        stage('Push ECR- Manual?') {
            steps {
                timeout(time: 1, unit:'DAYS') {
                    input 'Push to ECR?'
                    
                }
            }
        }
    }
}
